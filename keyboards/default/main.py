from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import requests
from data.config import BASE_URL


def main_btn(lang: str):
    if lang == 'uz':
        markup = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(text='–ú–∞—ä–ª—É–º–æ—Ç –æ–ª–∏—à'),
                    KeyboardButton(text='–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–∏—Ñ–∞—Ç–∏–¥–∞ —Ä—û–π—Ö–∞—Ç–¥–∞–Ω —û—Ç–∏—à'),
                ],
                [
                    KeyboardButton(text='–¢–∏–ª–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à'),
                ]
            ],
            resize_keyboard=True
        )
    else:
        markup = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(text='–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'),
                    KeyboardButton(text='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –≤–∏–¥–µ –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞'),
                ],
                [
                    KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫'),
                ]
            ],
            resize_keyboard=True
        )
    return markup


def info_btn(lang: str):
    if lang == 'uz':
        markup = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(text='–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–ª–∞—Ä “≥–∞“õ–∏–¥–∞ –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä'),
                    KeyboardButton(text='–û–Ω–ª–∞–π–Ω –¥–∞—Ä—Å–ª–∞—Ä'),
                ],
                [
                    KeyboardButton(text="–¢–µ—Å—Ç –±—û–π–∏—á–∞ –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä"),
                    KeyboardButton(text="–¢–∞—Ä–∏—Ñ–ª–∞—Ä"),
                ],
                [
                    KeyboardButton(text="‚¨ÖÔ∏èO—Ä—Ç–≥–∞"),
                ]
            ],
            resize_keyboard=True
        )
    else:
        markup = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞—Ö'),
                    KeyboardButton(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–Ω–ª–∞–π–Ω —É—Ä–æ–∫–∞—Ö'),
                ],
                [
                    KeyboardButton(text="–¢–µ—Å—Ç—ã"),
                    KeyboardButton(text="–¢–∞—Ä–∏—Ñ—ã"),
                ],
                [
                    KeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥"),
                ]
            ],
            resize_keyboard=True
        )
    return markup


def info_btn_for_ins(lang: str):
    if lang == 'uz':
        markup = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(text='–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–ª–∞—Ä “≥–∞“õ–∏–¥–∞ –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä'),
                    KeyboardButton(text='–û–Ω–ª–∞–π–Ω –¥–∞—Ä—Å–ª–∞—Ä'),
                ],
                [
                    KeyboardButton(text="–¢–µ—Å—Ç –±—û–π–∏—á–∞ –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä"),
                    KeyboardButton(text="–¢–∞—Ä–∏—Ñ–ª–∞—Ä"),
                ],
                [
                    KeyboardButton(text="Ô∏è–ü—Ä–æ—Ñ–∏–ª"),
                ]
            ],
            resize_keyboard=True
        )
    else:
        markup = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞—Ö'),
                    KeyboardButton(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–Ω–ª–∞–π–Ω —É—Ä–æ–∫–∞—Ö'),
                ],
                [
                    KeyboardButton(text="–¢–µ—Å—Ç—ã"),
                    KeyboardButton(text="–¢–∞—Ä–∏—Ñ—ã"),
                ],
                [
                    KeyboardButton(text="Ô∏è–ü—Ä–æ—Ñ–∏–ª—å"),
                ]
            ],
            resize_keyboard=True
        )
    return markup


def regions():
    r = requests.get(url=f"{BASE_URL}/instructor/regions/")
    rg = r.json()
    keyboard = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    for i in rg:
        keyboard.insert(
            KeyboardButton(text=f"{i['nomi']}")
        )
    return keyboard


def categories():
    res = requests.get(url=f"{BASE_URL}/session/categories/")
    cats = res.json()
    keyboard = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    for i in cats:
        keyboard.insert(
            KeyboardButton(text=f"{i['toifa']}")
        )
    return keyboard


def text_info():
    res = requests.get(url=f"{BASE_URL}/client/info/1/")
    return res.json()


def text_ins_reg():
    res = requests.get(url=f"{BASE_URL}/instructor/text-r/1/")
    cats = res.json()
    return cats


def text_ins_up():
    res = requests.get(url=f"{BASE_URL}/instructor/text-u/1/")
    cats = res.json()
    return cats
def menu_instructor(lang: str):
    if lang == 'uz':
        markup = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton("üë®‚Äç‚úàÔ∏èÔ∏è–ü—Ä–æ—Ñ–∏–ª"),
                    KeyboardButton("üë®‚Äç‚úàÔ∏è–ü—Ä–æ—Ñ–∏–ª–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à"),
                ],
                [
                    KeyboardButton("üë®‚Äç‚úàÔ∏è–ü—Ä–æ—Ñ–∏–ª–Ω–∏ —û—á–∏—Ä–∏—à"),
                    KeyboardButton('–ë–æ—à –º–µ–Ω—é'),
                ],
                [
                    KeyboardButton("–¢–∏–ª–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à")
                ]
            ],
            resize_keyboard=True
        )
    else:
        markup = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton("üë®‚Äç‚úàÔ∏èÔ∏è–ü—Ä–æ—Ñ–∏–ª—å"),
                    KeyboardButton("üë®‚Äç‚úàÔ∏è–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è"),
                ],
                [
                    KeyboardButton("üë®‚Äç‚úàÔ∏è–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"),
                    KeyboardButton('–ì–ª–∞–≤–Ω—ã–π –º–µ–Ω—é'),
                ],
                [
                    KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")
                ]
            ],
            resize_keyboard=True
        )
    return markup


def profile_delete(lang: str):
    if lang == 'uz':
        markup = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(text='“≤–∞'),
                    KeyboardButton(text='–ô—û“õ'),
                ]
            ],
            resize_keyboard=True
        )
    else:
        markup = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(text='–î–∞'),
                    KeyboardButton(text='–ù–µ—Ç'),
                ]
            ],
            resize_keyboard=True
        )
    return markup
